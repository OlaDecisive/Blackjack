// <auto-generated />
using System;
using Blackjack.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blackjack.Model.Migrations
{
    [DbContext(typeof(BlackjackContext))]
    [Migration("20240124143203_FixCardPrimaryKey")]
    partial class FixCardPrimaryKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Blackjack.Model.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeckId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("HandId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Suit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.HasIndex("HandId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Blackjack.Model.Deck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("Blackjack.Model.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Blackjack.Model.GameState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DealerHandId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DeckId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlayerHandId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DealerHandId");

                    b.HasIndex("DeckId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerHandId");

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("Blackjack.Model.Hand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hands");
                });

            modelBuilder.Entity("Blackjack.Model.Card", b =>
                {
                    b.HasOne("Blackjack.Model.Deck", null)
                        .WithMany("Cards")
                        .HasForeignKey("DeckId");

                    b.HasOne("Blackjack.Model.Hand", null)
                        .WithMany("Cards")
                        .HasForeignKey("HandId");
                });

            modelBuilder.Entity("Blackjack.Model.GameState", b =>
                {
                    b.HasOne("Blackjack.Model.Hand", "DealerHand")
                        .WithMany()
                        .HasForeignKey("DealerHandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blackjack.Model.Deck", "Deck")
                        .WithMany()
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blackjack.Model.Game", "Game")
                        .WithMany("Rounds")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blackjack.Model.Hand", "PlayerHand")
                        .WithMany()
                        .HasForeignKey("PlayerHandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DealerHand");

                    b.Navigation("Deck");

                    b.Navigation("Game");

                    b.Navigation("PlayerHand");
                });

            modelBuilder.Entity("Blackjack.Model.Deck", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Blackjack.Model.Game", b =>
                {
                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("Blackjack.Model.Hand", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
